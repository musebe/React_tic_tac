{"version":3,"sources":["index.js"],"names":["Square","props","value","other","Object","_home_eugene_Desktop_Research_tic_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_7__","React","createElement","className","onClick","Board","cells","squares","counter","map","row","key","toString","slice","cellID","Status","status","xIsNext","winner","calculateWinner","effect","Moves","history","stepNumber","moves","step","move","clickIndex","col","Math","floor","desc","btn_highlight","Game","_this","_home_eugene_Desktop_Research_tic_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_home_eugene_Desktop_Research_tic_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_eugene_Desktop_Research_tic_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","Array","fill","handleClick","bind","_home_eugene_Desktop_Research_tic_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","jumpTo","i","length","setState","concat","Component","lines","_lines$i","_home_eugene_Desktop_Research_tic_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2131d3e2.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\n\n/**\n * \"TIC TAC TOE\" game built in ReactJS\n * ------------------------\n * Eric Njanga (March 2018)\n *\n * Game that:\n * -----------\n * > Lets you play tic-tac-toe,\n * > Indicates when one player has won the game,\n * > Stores the history of moves during the game,\n * > Allows players to jump back in time to see older versions of the game board.\n\n * Game extra features:\n * --------------------\n * > Display the location for each move in the format (col, row) in the move history list.\n * > Bold the currently selected item in the move list.\n * > Rewrite Board to use two loops to make the squares instead of hardcoding them.\n * Add a toggle button that lets you sort the moves in either ascending or descending order.\n * When someone wins, highlight the three squares that caused the win.\n * When no one wins, display a message about the result being a draw.\n*/\n\n\n\n//Square component\n//----------------\n//Functional component which renders a button (Visually represented as a square):\n//- Renders value (props)\n//- Runs a click event handler on the button (props)\nconst Square = props => {\n  const { value, ...other } = props;\n\n  //Renders React element ...\n  return (\n    React.createElement(\"button\", { className: 'square ' + value, onClick: () => other.onClick() }, value));\n\n};\n\n\n\n//Board component\n//----------------\n//Functional component that renders the entire board with all squares:\n//- The board (3x3 grid)\n//- All squares components (passing with value and click handler for each one)\n//- Runs a click event handler on each individual square component\nconst Board = props => {\n  const { cells, squares, ...other } = props,\n    ArrRows = [0, 1, 2];\n  let counter = 1;\n\n  //Renders React element ...\n  return (\n    React.createElement(\"div\", { className: \"board\" }, \" \",\n      ArrRows.map((row) =>\n        React.createElement(\"div\", { key: row.toString(), className: \"board-row\" },\n\n          cells.slice(row * 3, counter++ * 3).map((cellID) =>\n            React.createElement(Square, { key: cellID.toString(), value: squares[cellID], onClick: () => other.onClick(cellID) }))))));\n\n\n\n\n\n\n\n};\n\n\n\n//Status component\n//----------------\n//Functional component which computes and renders the game status:\n//- Who plays next? (uses xIsNext value)\n//- Who is the winner? (uses squares values and external function)\nconst Status = props => {\n  const { squares, xIsNext } = props,\n    winner = calculateWinner(squares),\n    effect = winner ? 'bounce' : '';\n  let status;\n\n  if (winner) {\n    status = 'Winner is: ' + winner;\n  } else {\n    status = 'Next player is: ' + (xIsNext ? 'x' : 'o');\n  }\n\n  //Renders React element ...\n  return (\n    React.createElement(\"div\", { className: \"game-info__status\" },\n      React.createElement(\"div\", { className: 'status ' + effect }, status)));\n\n\n};\n\n\n\n//Moves component\n//----------------\n//Functional component which uses the game history to compute and renders players successive move\n//(players can revert to previous moves)\n//- Display a list of buttons pointing to each move made\n//- Highlights the button which links to the current move\n//- Runs a click event handler on each button\nconst Moves = props => {\n  const { history, stepNumber, ...other } = props;\n  const moves = history.map((step, move) => {\n    const clickIndex = step.clickIndex;\n    const col = Math.floor(clickIndex % 3),\n      row = Math.floor(clickIndex / 3),\n      //col and row where the latest click happened\n      clickPosition = '(row:' + row + ', col:' + col + ')';\n    let desc = move ? 'Go to move #' + move + ' ' + clickPosition : 'Go to game start';\n    //Bold the currently selected item in the move list\n    const btn_highlight = stepNumber === move ? 'btn-primary' : 'btn-secondary';\n    return (\n      React.createElement(\"li\", { key: move },\n        React.createElement(\"button\", {\n          className: \"btn \" + btn_highlight + \" btn-block\",\n          onClick: () => other.onClick(move)\n        }, desc)));\n\n\n  });\n\n  //Renders React element ...\n  return (\n    React.createElement(\"div\", { className: \"game-info__moves\" },\n      React.createElement(\"ol\", { className: \"list-moves list-unstyled\" },\n        moves)));\n\n\n\n};\n\n\n\n//Game component\n//----------------\n//Stateful component that contains the application's major business logic...\n//- Handles the logic of clicking on the board (handleClick)\n//- Handles the logic on clicking on a on move button\n//- Renders the entire game\nclass Game extends React.Component {\n  //Setup component initial state values and bind methods\n  constructor(props) {\n    super(props); //Access parent functions\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        //Help calculate the col and row where the latest click happened\n        clickIndex: null\n      }],\n\n      xIsNext: true,\n      stepNumber: 0\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.jumpTo = this.jumpTo.bind(this);\n  }\n\n  //...\n  //- Updates app's history (based on the current step)\n  //- Make sure no selection happens on the same square or if the game has been won already\n  //- Records each move and save it in the history\n  //- Switch to the next player\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'x' : 'o';\n    this.setState({\n      history: history.concat([{ squares: squares, clickIndex: i }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n\n  }\n\n  //...\n  //Changes the game current step and update player's turn accordingly\n  //(will influence the game history)\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n\n  }\n\n  //Renders React element ...\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const squares = current.squares.slice();\n\n    return (\n      React.createElement(\"div\", { className: \"game\" },\n        React.createElement(\"div\", { className: \"game-board\" },\n          React.createElement(Board, { squares: squares, onClick: this.handleClick, cells: [0, 1, 2, 3, 4, 5, 6, 7, 8] })),\n\n        React.createElement(\"div\", { className: \"game-info\" },\n          React.createElement(Status, { squares: squares, xIsNext: this.state.xIsNext }),\n          React.createElement(Moves, { history: this.state.history, stepNumber: this.state.stepNumber, onClick: this.jumpTo }))));\n\n\n\n  }\n}\n\n\n\n//Render the application\nReactDOM.render(\n  React.createElement(Game, null),\n  document.getElementById('root'));\n\n\n\n\n/**\n                                   * Scan the entire \"squares\" array to see if any of the\n                                   * symbols are aligned in a winning combination.\n                                   * (In case of winning, return the symbol)\n                                  **/\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}